import mmh3
from telethon.tl.types import Message
from .. import loader
import firebase_admin
from firebase_admin import credentials, db as firebase_db
import json

@loader.tds
class BroadMod(loader.Module):
    """–ú–æ–¥—É–ª—å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Firebase Realtime Database."""

    strings = {"name": "Broad"}

    def __init__(self):
        super().__init__()
        self.me = None
        self.client = None
        self.allowed_chats = []
        self.firebase_app = None
        self.db_ref = None

    async def client_ready(self, client, db):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—è –ø—Ä–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫–ª–∏–µ–Ω—Ç–∞."""
        self.client = client

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ –ª–∏ —É–∂–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Firebase
        if not firebase_admin._apps:
            try:
                cred = credentials.Certificate(
                    "/home/hikka/Hikka/loll-8a3bd-firebase-adminsdk-4pvtd-6b93a17b70.json"
                )
                self.firebase_app = firebase_admin.initialize_app(cred, {
                    'databaseURL': 'https://loll-8a3bd-default-rtdb.firebaseio.com'
                })
            except Exception as e:
                await client.send_message("me", f"–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Firebase: {str(e)}")
                return
        
        try:
            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Å—ã–ª–æ–∫ –Ω–∞ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
            self.db_ref = firebase_db.reference('/')
            
            # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö —á–∞—Ç–æ–≤
            chats_ref = self.db_ref.child('allowed_chats')
            chats_data = chats_ref.get()
            
            # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Å–ø–∏—Å–æ–∫, –µ—Å–ª–∏ –æ–Ω–∏ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
            if chats_data:
                if isinstance(chats_data, list):
                    self.allowed_chats = chats_data
                elif isinstance(chats_data, dict):
                    self.allowed_chats = list(chats_data.values())
                else:
                    self.allowed_chats = []
            
            await client.send_message(
                "me", 
                f"–ú–æ–¥—É–ª—å —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω\n–†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ —á–∞—Ç—ã: {self.allowed_chats}"
            )
            
        except Exception as e:
            await client.send_message(
                "me", 
                f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Firebase: {str(e)}"
            )

    async def forward_to_channel(self, message: Message):
        """–ü–µ—Ä–µ—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –∫–∞–Ω–∞–ª."""
        try:
            # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª
            forwarded_msg = await message.forward_to(2498567519)
                
        except Exception as e:
            await self.client.send_message(
                "me",
                f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Å—ã–ª–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª: {str(e)}"
            )

    async def watcher(self, message: Message):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π."""
        if not isinstance(message, Message) or not message.text:
            return
        
        try:
            if message.chat_id not in self.allowed_chats:
                return
            
            message_hash = str(mmh3.hash(message.text))
            
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ —Ö—ç—à–∏
            hashes_ref = self.db_ref.child('hashes/hash_list')
            current_hashes = hashes_ref.get()
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
            if current_hashes is None:
                current_hashes = []
            elif isinstance(current_hashes, dict):
                current_hashes = list(current_hashes.values())
            
            if message_hash not in current_hashes:
                # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –∫–∞–Ω–∞–ª
                await self.forward_to_channel(message)
                
                # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π —Ö—ç—à
                current_hashes.append(message_hash)
                # –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
                hashes_ref.set(current_hashes)
                
            else:
                # –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –º–æ–∂–Ω–æ —É–±—Ä–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –Ω–µ –Ω—É–∂–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –¥—É–±–ª–∏–∫–∞—Ç–∞—Ö
                await self.client.send_message(
                    "me", 
                    "‚ö†Ô∏è –°–æ–æ–±—â–µ–Ω–∏–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö."
                )
                
        except Exception as e:
            await self.client.send_message(
                "me", 
                f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {str(e)}"
            )

    async def manage_chat_cmd(self, message: Message):
        """–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–æ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö —á–∞—Ç–æ–≤."""
        try:
            args = message.text.split()

            if len(args) != 3:
                if self.allowed_chats:
                    await message.reply(
                        f"üìù –°–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö —á–∞—Ç–æ–≤:\n{', '.join(map(str, self.allowed_chats))}"
                    )
                else:
                    await message.reply("üìù –°–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö —á–∞—Ç–æ–≤ –ø—É—Å—Ç.")
                return

            try:
                chat_id = int(args[2])
            except ValueError:
                await message.reply("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID —á–∞—Ç–∞. –£–∫–∞–∂–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —á–∏—Å–ª–æ.")
                return

            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö —á–∞—Ç–æ–≤
            if chat_id not in self.allowed_chats:
                self.allowed_chats.append(chat_id)
                txt = f"‚úÖ –ß–∞—Ç {chat_id} –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫."
            else:
                self.allowed_chats.remove(chat_id)
                txt = f"‚ùå –ß–∞—Ç {chat_id} —É–¥–∞–ª–µ–Ω –∏–∑ —Å–ø–∏—Å–∫–∞."

            # –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
            chats_ref = self.db_ref.child('allowed_chats')
            chats_ref.set(self.allowed_chats)
            
            await message.reply(txt)
            
        except Exception as e:
            await message.reply(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–æ–º —á–∞—Ç–æ–≤: {str(e)}")
