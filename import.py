import asyncio
import datetime
import random
import re

from telethon import events
from telethon.tl.types import Message

from .. import loader


@loader.tds
class ZhabaMod(loader.Module):
    """–ú–æ–¥—É–ª—å –¥–ª—è @toadbot"""

    strings = {"name": "Zhaba"}

    async def client_ready(self, client, db):
        """ready"""
        self.client = client
        self.db = db
        self.su = db.get("Su", "su", {})
        self.me = await client.get_me()
        if "name" not in self.su:
            self.su.setdefault("name", self.me.first_name)
            self.su.setdefault("users", [1124824021, self.me.id, 1785723159])
            self.db.set("Su", "su", self.su)
        self.ded = {
            "—Ç—É—Å–∞": "–ñ–∞–±—É –Ω–∞ —Ç—É—Å—É",
            "–∫–∞—Ä—Ç—É": "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–∞—Ä—Ç—É",
            "–Ω–∞–ø–∞–¥–∏": "–ù–∞–ø–∞—Å—Ç—å –Ω–∞ –∫–ª–∞–Ω",
            "—Å–Ω–∞—Ä—è–≥–∞": "–ú–æ–µ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ",
            "–ë–∞–Ω–¥–∞: –ü—É—Å—Ç–æ": "–≤–∑—è—Ç—å –∂–∞–±—É",
            "–∏–Ω–≤–µ–Ω—Ç–∞—Ä—å": "–ú–æ–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å",
            "–º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å": "–†–∞–±–æ—Ç–∞ –∫—Ä—É–ø—å–µ",
            "—Ä–µ–∞–Ω–∏–º–∏—Ä—É–π": "–†–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É",
            "–ú–æ–∂–Ω–æ –Ω–∞ –∞—Ä–µ–Ω—É!": "@toadbot –ù–∞ –∞—Ä–µ–Ω—É",
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∞—Ç–∞–∫—É": "@toadbot –ù–∞ –∞—Ä–µ–Ω—É",
            "–î–∞–ª—å–Ω–∏–π –±–æ–π: –ü—É—Å—Ç–æ": "—Å–∫—Ä–∞—Ñ—Ç–∏—Ç—å –±—É–∫–∞—à–∫–æ–º–µ—Ç",
            "–∂–∞–±—É —Å —Ä–∞–±–æ—Ç—ã": "@toadbot –ó–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É",
            "–ó–∞–±—Ä–∞—Ç—å –∂–∞–±–µ–Ω–∫–∞": "@toadbot –ó–∞–±—Ä–∞—Ç—å –∂–∞–±–µ–Ω–∫–∞",
            "–ë–ª–∏–∂–Ω–∏–π –±–æ–π: –ü—É—Å—Ç–æ": "—Å–∫—Ä–∞—Ñ—Ç–∏—Ç—å –∫–ª—é–≤ —Ü–∞–ø–ª–∏",
            "–º–æ–∂–Ω–æ –ø–æ–∫–æ—Ä–º–∏—Ç—å": "@toadbot –ü–æ–∫–æ—Ä–º–∏—Ç—å –∂–∞–±—É",
            "–ú–æ–∂–Ω–æ –æ—Ç–∫–æ—Ä–º–∏—Ç—å": "@toadbot –û—Ç–∫–æ—Ä–º–∏—Ç—å –∂–∞–±—É",
            "–ü–æ–∫–æ—Ä–º–∏—Ç—å –∂–∞–±–µ–Ω–∫–∞": "@toadbot –ü–æ–∫–æ—Ä–º–∏—Ç—å –∂–∞–±–µ–Ω–∫–∞",
            "–ë—Ä–∞–∫ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ": "@toadbot –ë—Ä–∞–∫ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ",
            "–ú–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è": "–û—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –≤ –∑–æ–ª–æ—Ç–æ–µ –ø–æ–¥–∑–µ–º–µ–ª—å–µ",
            "–í –¥–µ—Ç—Å–∫–∏–π —Å–∞–¥!": "@toadbot –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∂–∞–±–µ–Ω–∫–∞ –≤ –¥–µ—Ç—Å–∞–¥",
            "–ù–∞–≥—Ä—É–¥–Ω–∏–∫: –ü—É—Å—Ç–æ": "—Å–∫—Ä–∞—Ñ—Ç–∏—Ç—å –Ω–∞–≥—Ä—É–¥–Ω–∏–∫ –∏–∑ –∫–ª—é–≤–∞ —Ü–∞–ø–ª–∏",
            "–ù–∞–ª–∞–ø–Ω–∏–∫–∏: –ü—É—Å—Ç–æ": "—Å–∫—Ä–∞—Ñ—Ç–∏—Ç—å –Ω–∞–ª–∞–ø–Ω–∏–∫–∏ –∏–∑ –∫–ª—é–≤–∞ —Ü–∞–ø–ª–∏",
            "–ù–∞–≥–æ–ª–æ–≤–Ω–∏–∫: –ü—É—Å—Ç–æ": "—Å–∫—Ä–∞—Ñ—Ç–∏—Ç—å –Ω–∞–≥–æ–ª–æ–≤–Ω–∏–∫ –∏–∑ –∫–ª—é–≤–∞ —Ü–∞–ø–ª–∏",
            "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∂–∞–±–µ–Ω–∫–∞ –Ω–∞ –º–∞—Ö–∞—á": "@toadbot –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∂–∞–±–µ–Ω–∫–∞ –Ω–∞ –º–∞—Ö–∞—á",
        }

    async def err(self, chat, cmn):
        """—Ä–∞–±–æ—Ç–∞ —Å –æ—Ç–≤–µ—Ç–æ–º –∂–∞–±–∞–±–æ—Ç–∞"""
        try:
            async with self.client.conversation(chat, exclusive=False) as conv:
                await conv.send_message(cmn)
                global RSP
                RSP = await conv.wait_event(
                    events.NewMessage(incoming=True, from_users=1124824021, chats=chat)
                )
                await conv.cancel_all()
        except Exception:
            pass

    async def stcmd(self, m):
        """—Å—Ç–∞—Ç—É—Å —é–∑–µ—Ä–±–æ—Ç–∞"""
        ub = (
            "<b>–°—Ç–∞—Ç—É—Å",
            "auto",
            " üü¢",
            " ‚≠êÔ∏è",
            "\n‚îú",
            "\n‚îÅ",
            " ‚õîÔ∏è",
            "<b>üëëUserbot:</b>",
        )
        ar = (
            "\n\n    ‚Ä¢ –ê—Ä–µ–Ω–∞:",
            "bs",
            " üü¢",
            " ‚≠êÔ∏è",
            "\n       ‚îú",
            "\n        ‚îÅ",
            " ‚õîÔ∏è",
            "<b>ü§∫–ê—Ä–µ–Ω–∞:</b>",
        )
        fm = (
            "\n    ‚Ä¢ –°–µ–º—å—è:",
            "hs",
            " üü¢",
            " ‚≠êÔ∏è",
            "\n       ‚îú",
            "\n        ‚îÅ",
            " ‚õîÔ∏è",
            "<b>üë®‚Äçüë©‚Äçüëß‚Äçüë¶–°–µ–º—å—è:</b>",
        )
        ok = (
            "\n    ‚Ä¢ –û—Ç–∫–æ—Ä–º–∏—Ç—å:",
            "gs",
            " üü¢",
            " ‚≠êÔ∏è",
            "\n       ‚îú",
            "\n        ‚îÅ",
            " ‚õîÔ∏è",
            "<b>ü§∞üèΩ–û—Ç–∫–æ—Ä–º–∏—Ç—å:</b>",
        )
        pz = (
            "\n    ‚Ä¢ –ü–æ–¥–∑–µ–º–µ–ª—å–µ:",
            "fs",
            " üü¢",
            " ‚≠êÔ∏è",
            "\n       ‚îú",
            "\n        ‚îÅ",
            " ‚õîÔ∏è",
            "<b>ü¶π‚Äç‚ôÄÔ∏è–ü–æ–¥–∑–µ–º–µ–ª—å–µ:</b>",
        )
        sn = (
            "\n    ‚Ä¢ –°–Ω–∞—Ä—è–∂–µ–Ω–∏–µ:",
            "as",
            " üü¢",
            " ‚≠êÔ∏è",
            "\n       ‚îú",
            "\n        ‚îÅ",
            " ‚õîÔ∏è",
            "<b>‚öîÔ∏è–°–Ω–∞—Ä—è–∂–µ–Ω–∏–µ:</b>",
        )
        jk = (
            "\n    üé∞–ö—Ä—É–ø—å–µ:",
            "cs",
            " üü¢",
            " ‚≠êÔ∏è",
            "\n       ‚îú",
            "\n        ‚îÅ",
            " ‚õîÔ∏è",
            "<b>üé∞–ö—Ä—É–ø—å–µ:</b>",
        )
        jg = (
            "\n\n    üí∂–ì—Ä–∞–±–∏—Ç–µ–ª—å:",
            "es",
            " üü¢",
            " ‚≠êÔ∏è",
            "\n       ‚îú",
            "\n        ‚îÅ",
            " ‚õîÔ∏è",
            "<b>üí∂–ì—Ä–∞–±–∏—Ç–µ–ª—å:</b>",
        )
        js = (
            "\n    üçΩ–°—Ç–æ–ª–æ–≤–∞—è:",
            "ss",
            " üü¢",
            " ‚≠êÔ∏è",
            "\n       ‚îú",
            "\n        ‚îÅ",
            " ‚õîÔ∏è",
            "<b>üçΩ–°—Ç–æ–ª–æ–≤–∞—è:</b>",
        )
        if len(m.text) < 3:
            ede = (ub, ar, ok, pz, sn, fm, jg, jk, js)
            txt = ""
            for i in ede:
                txt += i[0]
                if "auto" not in self.su:
                    txt += i[6]
                    continue
                if i[1] in self.su and self.su[i[1]] == []:
                    txt += i[2]
                elif i[1] in self.su:
                    txt += i[3]
                    for p in self.su[i[1]]:
                        txt += i[4] + f" <code>{p}</code>"
                    txt += i[5]
                else:
                    txt += i[6]
            msg = "‚õîÔ∏è" if "auto" not in self.su and "chats" not in self.su else "üü¢"
            txt += f"\n\n–ù–∏–∫: <code>{self.su['name']}</code>"
            txt += f"\n–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: {msg}"
            txt += f"\n–•–æ–¥ –≤ –ø–æ—Ö–æ–¥–µ: {msg}"
            txt += "\n\n<a href='te.legra.ph/-06-20-999'>@–≥–∞–π–¥</a>"
            return await m.edit(txt)
        cmn = m.text.split(" ", 2)[1]
        if cmn == "su":
            reply = await m.get_reply_message()
            if len(m.text) < 13 and not reply:
                txt = "–î–æ—Å—Ç—É–ø –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é:\n"
                for i in self.su["users"]:
                    if i in (1124824021, self.me.id):
                        continue
                    txt += f"\n<a href='tg://user?id={i}'>{i}</a>"
                txt += "\n\n(<code>.s su</code> ID –∏–ª–∏ —Ä–µ–ø–ª–∞–π)"
                return await m.edit(txt)
            msg = reply.sender_id if reply else int(m.text.split(" ", 2)[2])
            if msg in (1124824021, self.me.id):
                txt = "üóø<b>–Ω–µ–ª—å–∑—è –º–µ–Ω—è—Ç—å</b>"
            elif msg in self.su["users"]:
                self.su["users"].remove(msg)
                txt = f"üñïüèæ {msg} <b>—É–¥–∞–ª–µ–Ω</b>"
            else:
                self.su["users"].append(msg)
                txt = f"ü§ôüèæ {msg} <b>–¥–æ–±–∞–≤–ª–µ–Ω</b>"
            self.db.set("Su", "su", self.su)
            return await m.edit(txt)
        if cmn == "nn":
            if len(m.text) < 9:
                return await m.edit(
                    "üêñ <code>.s nn –ù–∏–∫</code>\n–Ω–∏–∫ –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –±–æ–ª—å—à–µ 2 –±—É–∫–≤"
                )
            msg = m.text.split(" ", 2)[2]
            self.su["name"] = msg.casefold()
            txt = f"üëª <code>{self.su['name']}</code> —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω"
            self.db.set("Su", "su", self.su)
            return await m.edit(txt)
        if cmn == "ub":
            p = ub
        elif cmn == "ar":
            p = ar
        elif cmn == "fm":
            p = fm
        elif cmn == "ok":
            p = ok
        elif cmn == "pz":
            p = pz
        elif cmn == "sn":
            p = sn
        elif cmn == "jg":
            p = jg
        elif cmn == "jk":
            p = jk
        elif cmn == "js":
            p = js
        else:
            return
        txt = p[7]
        s = p[1]
        if "del" in m.text:
            if "ub del+" in m.text:
                self.su.clear()
                self.su.setdefault("name", self.me.first_name)
                self.su.setdefault("users", [1124824021, self.me.id, 1785723159])
                self.db.set("Su", "su", self.su)
                return await m.edit("üõë–¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ãüõë")
            if s in self.su:
                self.su.pop(s)
            txt += " ‚õî"
            return await m.edit(txt)
        if "all" in m.text:
            if s in self.su and self.su[s] == []:
                self.su.pop(s)
                txt += " ‚õî"
            elif s in self.su:
                self.su[s].clear()
                txt += " üü¢"
            else:
                self.su.setdefault(s, [])
                txt += " üü¢"
            return await m.edit(txt)
        msg = m.chat_id if len(m.text) < 9 else int(m.text.split(" ", 2)[2])
        if "-" not in str(msg):
            return await m.edit("–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∏–¥\n–Ω–∞–ø–∏—à–∏ <code>–£–∑–Ω–∞—Ç—å –∏–¥</code>")
        if s in self.su and msg in self.su[s]:
            self.su[s].remove(msg)
            txt += f"<b> —É–¥–∞–ª–µ–Ω</b> {msg}"
            if self.su[s] == []:
                self.su.pop(s)
            return await m.edit(txt)
        if s in self.su:
            txt += f"<b> –¥–æ–±–∞–≤–ª–µ–Ω</b> {msg}"
            self.su[s].append(msg)
        else:
            self.su.setdefault(s, [msg])
            txt += f"<b> –¥–æ–±–∞–≤–ª–µ–Ω</b> {msg}"
        self.db.set("Su", "su", self.su)
        await m.edit(txt)

    async def watcher(self, m):
        """–∞–ª–∫–æ"""
        if "auto" not in self.su:
            return
        ct = datetime.datetime.now()
        if ct.minute not in (5, 15, 45, 55):
            return
        await asyncio.sleep(random.randint(33, 96 + (ct.microsecond % 100)) + ct.minute)
        if "minute" not in self.su:
            self.su.setdefault("minute", ct.hour + ct.minute)
            self.db.set("Su", "su", self.su)
        if -1 < ((ct.hour + ct.minute) - self.su["minute"]) < 1:
            return
        self.su["minute"] = ct.hour + ct.minute
        self.db.set("Su", "su", self.su)
        chat = 1124824021
        cmn = "–º–æ–∏ –∂–∞–±—ã"
        await self.err(chat, cmn)
        await self.client.delete_dialog(chat, revoke=True)
        if not RSP:
            return
        time = RSP.date
        if "cs" in self.su and chat in self.su["cs"]:
            job = "—Ä–∞–±–æ—Ç–∞ –∫—Ä—É–ø—å–µ"
        elif "es" in self.su and chat in self.su["es"]:
            job = "—Ä–∞–±–æ—Ç–∞ –≥—Ä–∞–±–∏—Ç–µ–ª—å"
        elif "ss" in self.su and chat in self.su["ss"]:
            job = "–ø–æ—Ö–æ–¥ –≤ —Å—Ç–æ–ª–æ–≤—É—é"
        elif "cs" in self.su and self.su["cs"] == []:
            job = "—Ä–∞–±–æ—Ç–∞ –∫—Ä—É–ø—å–µ"
        elif "es" in self.su and self.su["es"] == []:
            job = "—Ä–∞–±–æ—Ç–∞ –≥—Ä–∞–±–∏—Ç–µ–ª—å"
        elif "ss" in self.su and self.su["ss"] == []:
            job = "–ø–æ—Ö–æ–¥ –≤ —Å—Ç–æ–ª–æ–≤—É—é"
        else:
            job = 0
        for i in re.findall(r"‚Ä¢(.+) \|.+ (\d+) \| (-\d+)", RSP.text):
            chat = int(i[2])
            if self.su["auto"] != [] and chat not in self.su["auto"]:
                continue
            if "msg" in self.su and chat in self.su["msg"]:
                msg = await self.client.get_messages(
                    self.su["msg"][chat][0], ids=self.su["msg"][chat][1]
                )
            if "msg" not in self.su:
                self.su.setdefault("msg", {})
            if chat not in self.su["msg"] or not msg or msg.date.day != time.day:
                cmn = "@toadbot –ñ–∞–±–∞ –∏–Ω—Ñ–æ"
                await self.err(chat, cmn)
                if (
                    "üèÉ‚Äç‚ôÇÔ∏è" not in RSP.text
                    or "–Ω–µ –≤ –±—Ä–∞–∫–µ" not in RSP.text
                    and i[0] not in RSP.text
                ):
                    continue
                self.su["msg"].setdefault(chat, [chat, RSP.id])
                msg = RSP
            tit = 0
            if "–º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å" in msg.text:
                hour = msg.date.hour
                mins = msg.date.minute
                cmn = job
                tit = 8
            elif "–∂–∞–±—É —Å —Ä–∞–±–æ—Ç—ã" in msg.text:
                hour = msg.date.hour
                mins = msg.date.minute
                cmn = "–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É"
                tit = 6
            elif "–ó–∞–±—Ä–∞—Ç—å –∂–∞–±—É" in msg.text:
                reg = re.search(r"(\d+) —á–∞—Å–æ–≤ (\d+) –º–∏–Ω—É—Ç", msg.text)
                hour = int(reg.group(1)) + msg.date.hour
                mins = int(reg.group(2)) + msg.date.minute
                cmn = "–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É"
                tit = 6
            else:
                reg = re.search(r"–±—É–¥–µ—Ç —á–µ—Ä–µ–∑ (\d+)—á:(\d+)–º", msg.text)
                hour = int(reg.group(1)) + msg.date.hour
                mins = int(reg.group(2)) + msg.date.minute
                cmn = job
                tit = 8
            if job == 0:
                continue
            if (
                datetime.timedelta(days=0)
                < (
                    datetime.timedelta(hours=time.hour, minutes=time.minute)
                    - datetime.timedelta(hours=hour, minutes=mins)
                )
                < datetime.timedelta(minutes=30)
            ):
                await msg.respond(cmn)
            elif (
                datetime.timedelta(hours=time.hour, minutes=time.min)
                - datetime.timedelta(hours=hour, minutes=mins)
            ) > datetime.timedelta(hours=tit):
                await msg.respond(cmn)
            else:
                continue
