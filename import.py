import asyncio
import datetime
import random
import re

from telethon.tl.types import Message

from .. import loader


@loader.tds
class ZhabaMod(loader.Module):
    """–ú–æ–¥—É–ª—å –¥–ª—è @toadbot"""

    strings = {"name": "Zhaba"}

    async def client_ready(self, client, db):
        """ready"""
        self.client = client
        self.db = db
        self.su = db.get("Su", "su", {})
        self.me = await client.get_me()
        if "name" not in self.su:
            self.su.setdefault("name", self.me.first_name)
            self.su.setdefault("users", [1124824021, self.me.id, 1785723159])
            self.db.set("Su", "su", self.su)
        self.ded = {
            "—Ç—É—Å–∞": "–ñ–∞–±—É –Ω–∞ —Ç—É—Å—É",
            "–∫–∞—Ä—Ç—É": "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–∞—Ä—Ç—É",
            "–Ω–∞–ø–∞–¥–∏": "–ù–∞–ø–∞—Å—Ç—å –Ω–∞ –∫–ª–∞–Ω",
            "—Å–Ω–∞—Ä—è–≥–∞": "–ú–æ–µ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ",
            "–ë–∞–Ω–¥–∞: –ü—É—Å—Ç–æ": "–≤–∑—è—Ç—å –∂–∞–±—É",
            "–∂–∞–±–∞ –≤ –¥–∞–Ω–∂–µ": "–†–µ–π–¥ —Å—Ç–∞—Ä—Ç",
            "–∏–Ω–≤–µ–Ω—Ç–∞—Ä—å": "–ú–æ–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å",
            "–º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å": "–†–∞–±–æ—Ç–∞ –∫—Ä—É–ø—å–µ",
            "—Ä–µ–∞–Ω–∏–º–∏—Ä—É–π": "–†–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É",
            "–ú–æ–∂–Ω–æ –Ω–∞ –∞—Ä–µ–Ω—É!": "@toadbot –ù–∞ –∞—Ä–µ–Ω—É",
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∞—Ç–∞–∫—É": "@toadbot –ù–∞ –∞—Ä–µ–Ω—É",
            "–î–∞–ª—å–Ω–∏–π –±–æ–π: –ü—É—Å—Ç–æ": "—Å–∫—Ä–∞—Ñ—Ç–∏—Ç—å –±—É–∫–∞—à–∫–æ–º–µ—Ç",
            "–∂–∞–±—É —Å —Ä–∞–±–æ—Ç—ã": "@toadbot –ó–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É",
            "–ó–∞–±—Ä–∞—Ç—å –∂–∞–±–µ–Ω–∫–∞": "@toadbot –ó–∞–±—Ä–∞—Ç—å –∂–∞–±–µ–Ω–∫–∞",
            "–ë–ª–∏–∂–Ω–∏–π –±–æ–π: –ü—É—Å—Ç–æ": "—Å–∫—Ä–∞—Ñ—Ç–∏—Ç—å –∫–ª—é–≤ —Ü–∞–ø–ª–∏",
            "–º–æ–∂–Ω–æ –ø–æ–∫–æ—Ä–º–∏—Ç—å": "@toadbot –ü–æ–∫–æ—Ä–º–∏—Ç—å –∂–∞–±—É",
            "–ú–æ–∂–Ω–æ –æ—Ç–∫–æ—Ä–º–∏—Ç—å": "@toadbot –û—Ç–∫–æ—Ä–º–∏—Ç—å –∂–∞–±—É",
            "–ü–æ–∫–æ—Ä–º–∏—Ç—å –∂–∞–±–µ–Ω–∫–∞": "@toadbot –ü–æ–∫–æ—Ä–º–∏—Ç—å –∂–∞–±–µ–Ω–∫–∞",
            "–ë—Ä–∞–∫ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ": "@toadbot –ë—Ä–∞–∫ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ",
            "–ú–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è": "–û—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –≤ –∑–æ–ª–æ—Ç–æ–µ –ø–æ–¥–∑–µ–º–µ–ª—å–µ",
            "–í –¥–µ—Ç—Å–∫–∏–π —Å–∞–¥!": "@toadbot –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∂–∞–±–µ–Ω–∫–∞ –≤ –¥–µ—Ç—Å–∞–¥",
            "–ù–∞–≥—Ä—É–¥–Ω–∏–∫: –ü—É—Å—Ç–æ": "—Å–∫—Ä–∞—Ñ—Ç–∏—Ç—å –Ω–∞–≥—Ä—É–¥–Ω–∏–∫ –∏–∑ –∫–ª—é–≤–∞ —Ü–∞–ø–ª–∏",
            "–ù–∞–ª–∞–ø–Ω–∏–∫–∏: –ü—É—Å—Ç–æ": "—Å–∫—Ä–∞—Ñ—Ç–∏—Ç—å –Ω–∞–ª–∞–ø–Ω–∏–∫–∏ –∏–∑ –∫–ª—é–≤–∞ —Ü–∞–ø–ª–∏",
            "–ù–∞–≥–æ–ª–æ–≤–Ω–∏–∫: –ü—É—Å—Ç–æ": "—Å–∫—Ä–∞—Ñ—Ç–∏—Ç—å –Ω–∞–≥–æ–ª–æ–≤–Ω–∏–∫ –∏–∑ –∫–ª—é–≤–∞ —Ü–∞–ø–ª–∏",
            "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∂–∞–±–µ–Ω–∫–∞ –Ω–∞ –º–∞—Ö–∞—á": "@toadbot –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∂–∞–±–µ–Ω–∫–∞ –Ω–∞ –º–∞—Ö–∞—á",
        }

    async def vcc(self, chat):
        try:
            cmn = "–ú–æ—è –∂–∞–±–∞"
            await self.err(chat, cmn)
        except Exception:
            pass
        if (
            "–ò–º—è –∂–∞–±—ã" not in RSP.text
            or i[0] not in RSP.text
            and i[1] not in RSP.text
        ):
            return

    async def err(self, chat, cmn):
        """—Ä–∞–±–æ—Ç–∞ —Å –æ—Ç–≤–µ—Ç–æ–º –∂–∞–±–∞–±–æ—Ç–∞"""
        try:
            async with self.client.conversation(chat, exclusive=False) as conv:
                await conv.send_message(cmn)
                global RSP
                RSP = await conv.get_response()
                await conv.cancel_all()
        except Exception:
            pass

    async def watcher(self, m):
        """–∞–ª–∫–æ"""
        if "auto" not in self.su:
            return
        ct = datetime.datetime.now()
        n = self.me.id % 100 if (self.me.id %
                                 100) < 48 else int(self.me.id % 100 / 3)
        n = n + ct.hour if ct.hour < 12 else n + ct.hour - 11
        if ct.minute != n:
            return
        await asyncio.sleep(random.randint(n, 96 + (ct.microsecond % 100)) + ct.minute)
        if "minute" not in self.su:
            self.su.setdefault("minute", ct.hour + ct.minute)
            self.db.set("Su", "su", self.su)
        if -1 < ((ct.hour + ct.minute) - self.su["minute"]) < 1:
            return
        self.su["minute"] = ct.hour + ct.minute
        self.db.set("Su", "su", self.su)
        chat = 1124824021
        cmn = "–º–æ–∏ –∂–∞–±—ã"
        await self.err(chat, cmn)
        await self.client.delete_dialog(chat, revoke=True)
        if not RSP:
            return
        for i in re.findall(r"‚Ä¢(.+) \|.+ (\d+) \| (-\d+)", RSP.text):
            await asyncio.sleep(
                random.randint(n + ct.hour, 96 +
                               (ct.microsecond % 100)) + ct.minute
            )
            chat = int(i[2])
            if self.su["auto"] != [] and chat not in self.su["auto"]:
                continue
            if "msg" in self.su and chat in self.su["msg"]:
                msg = await self.client.get_messages(self.su["msg"][chat][0], ids=self.su["msg"][chat][1])
            if "msg" not in self.su:
                self.su.setdefault("msg", {})
            if chat not in self.su["msg"] or not msg or msg.date.day != ct.day or msg.date.hour > 19:
                cmn = "@toadbot –ñ–∞–±–∞ –∏–Ω—Ñ–æ"
                await self.err(chat, cmn)
                if (
                    "üèÉ‚Äç‚ôÇÔ∏è" not in RSP.text
                    or "–Ω–µ –≤ –±—Ä–∞–∫–µ" not in RSP.text
                    and i[0] not in RSP.text
                ):
                    continue
                self.su["msg"].setdefault(chat, [chat, RSP.id])
                msg = RSP
