import random

from telethon.tl.types import Message

from .. import loader


@loader.tds
class AssMod(loader.Module):
    """–ú–æ–¥—É–ª—å"""

    strings = {"name": "Ass"}

    async def client_ready(self, client, db):
        """ready"""
        self.client = client
        self.db = db

    async def watcher(self, m):
        """–∞–ª–∫–æ"""
        if m.text.lower() == "—Ç–æ–ø":
            ass = self.db.get("Su", "as", {})
            top = "–¢–æ–ø –±–∞–≥–æ—é–∑–µ—Ä–æ–≤:\n"
            for i in sorted(ass.items(), key=lambda x: x[1], reverse=True):
                top += f"\n{i[1][1]} {i[1][0]}"
            return await m.respond(top)
        if (
            not isinstance(m, Message)
            or not m.text.casefold().startswith("–∑–∞–∫–∏–¥–∞—Ç—å ")
            or ("–æ–¥–µ—Ä" not in m.text and "–º–∏–Ω" not in m.text)
        ):
            return
        ass = self.db.get("Su", "as", {})
        send = str(m.sender_id)
        if send not in ass:
            ass.setdefault(send, [0, m.sender.first_name])
        num = random.randint(2, 5)
        ass[send][0] += num
        self.db.set("Su", "as", ass)
        cmn = m.text.split(" ", 2)[1]
        if cmn in ("–¥–µ—Ä—å–º–æ–º", "–≥–æ–≤–Ω–∏—â–µ–º", "–≥–æ–≤–Ω–∏—à–∫–∞–º–∏"):
            cmn = "üí©"
        elif cmn in ("–ø–∏—Å—å–∫–∞–º–∏", "—Ö—É—è–º–∏", "—á–ª–µ–Ω–∞–º–∏"):
            cmn = ". –°–º–∞—á–Ω–æ –æ—Ç—Å–æ—Å–∞–ª–∏!üí¶üí¶üí¶ü•µü•µü•µ"
        else:
            cmn = "üëºüèæ"
        await m.respond(
            f"–°–ø–∞—Å–∏–±–æ! –í—ã –ø–æ–∫–æ—Ä–º–∏–ª–∏ –º–æ–¥–µ—Ä–∫—É{cmn} \n{num} –∞–¥–º–∏–Ω–∞ –∂–∞–±–∞–±–æ—Ç–∞ –≤–∞–º –±–ª–∞–≥–æ–¥–∞—Ä–Ω—ãüåö \n\n <b>–í–∞—à–∞ —Ä–µ–ø—É—Ç–∞—Ü–∏—è –≤ —Ç–ø: -{ass[send][0]}ü§°</b>"
        )
