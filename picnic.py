"""
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê1‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
    Profile Photo Repeater                       
    Developer: @xdesai                           
    Optimized: @kramiikk                         
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê2‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

–≠—Ç–æ—Ç –º–æ–¥—É–ª—å –ø–æ–∑–≤–æ–ª—è–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –ø—Ä–æ—Ñ–∏–ª—è
–∫–∞–∂–¥—ã–µ 15 –º–∏–Ω—É—Ç.

üìù –ö–æ–º–∞–Ω–¥—ã:
    ‚Ä¢ .pfp - –ó–∞–ø—É—Å—Ç–∏—Ç—å –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è
    ‚Ä¢ .pfpstop - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ

üí° –°–æ–≤–µ—Ç: –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Ñ–æ—Ç–æ –∫–æ–º–∞–Ω–¥–æ–π .pfp –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ 
    —Å –∫–æ–º–∞–Ω–¥–æ–π .pfp –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –µ–≥–æ –∫–∞–∫ —Ñ–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è

‚ö†Ô∏è –û—Ç–∫–∞–∑ –æ—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏:
    –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ –Ω–µ—Å–µ—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∑–∞ –ª—é–±—ã–µ –ø—Ä–æ–±–ª–µ–º—ã,
    –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –≤–æ–∑–Ω–∏–∫–Ω—É—Ç—å —Å –≤–∞—à–∏–º –∞–∫–∫–∞—É–Ω—Ç–æ–º.
"""

import asyncio
import logging
from telethon import functions
from .. import loader

logger = logging.getLogger(__name__)

@loader.tds
class PfpRepeaterMod(loader.Module):
    """–ú–æ–¥—É–ª—å –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ñ–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è"""

    strings = {"name": "PfpRepeater"}

    def __init__(self):
        self.config = loader.ModuleConfig(
            "DELAY", 900, "–ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏ —Ñ–æ—Ç–æ (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö)"
        )
        self.running = False
        self.task = None
        self.message = None
        self.photo = None

    async def client_ready(self, client, db):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ"""
        self.client = client
        self.db = db
        
        was_running = self.db.get(self.strings["name"], "running", False)
        if was_running:
            message_id = self.db.get(self.strings["name"], "message_id")
            chat_id = self.db.get(self.strings["name"], "chat_id")
            if message_id and chat_id:
                try:
                    self.message = await self.client.get_messages(chat_id, ids=message_id)
                    if self.message and self.message.photo:
                        self.photo = self.message.photo
                        self.running = True
                        self.task = asyncio.create_task(self.set_profile_photo())
                except Exception as e:
                    logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è: {str(e)}")

    async def set_profile_photo(self):
        """–û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ñ–æ—Ç–æ"""
        while self.running:
            try:
                if not self.message or not self.photo:
                    raise Exception("–§–æ—Ç–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")

                photo_bytes = await self.client.download_media(self.photo, bytes)
                
                await self.client(
                    functions.photos.UploadProfilePhotoRequest(
                        file=await self.client.upload_file(photo_bytes)
                    )
                )
                
                await asyncio.sleep(self.config["DELAY"])
                
            except Exception as e:
                self.running = False
                self.db.set(self.strings["name"], "running", False)
                await self.client.send_message(
                    self.db.get(self.strings["name"], "chat_id"),
                    f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ñ–æ—Ç–æ: {str(e)}. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–¥—É–ª—è."
                )
                break

    @loader.command()
    async def pfp(self, message):
        """–ó–∞–ø—É—Å—Ç–∏—Ç—å –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É —Å —Ñ–æ—Ç–æ –∏–ª–∏ –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Ñ–æ—Ç–æ."""
        if self.running:
            await message.edit("‚ö†Ô∏è –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ç–æ —É–∂–µ –∑–∞–ø—É—â–µ–Ω–æ.")
            return

        reply = await message.get_reply_message()
        target_message = reply if reply and reply.photo else message if message.photo else None

        if not target_message or not target_message.photo:
            await message.edit("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É —Å —Ñ–æ—Ç–æ –∏–ª–∏ –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–æ—Ç–æ.")
            return

        try:
            self.message = target_message
            self.photo = target_message.photo
            self.running = True

            self.db.set(self.strings["name"], "message_id", target_message.id)
            self.db.set(self.strings["name"], "chat_id", message.chat_id)
            self.db.set(self.strings["name"], "running", True)

            self.task = asyncio.create_task(self.set_profile_photo())
            
            await message.edit(
                f"‚úÖ –ó–∞–ø—É—â–µ–Ω–æ –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è –∫–∞–∂–¥—ã–µ {self.config['DELAY']} —Å–µ–∫—É–Ω–¥."
            )
        except Exception as e:
            await message.edit(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ: {str(e)}")
            self.running = False
            self.db.set(self.strings["name"], "running", False)

    @loader.command()
    async def pfpstop(self, message):
        """–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è"""
        if not self.running:
            await message.edit("‚ö†Ô∏è –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ç–æ –Ω–µ –∑–∞–ø—É—â–µ–Ω–æ.")
            return

        try:
            self.running = False
            if self.task:
                self.task.cancel()
            self.db.set(self.strings["name"], "running", False)
            await message.edit("üõë –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ç–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.")
        except Exception as e:
            await message.edit(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ: {str(e)}")
